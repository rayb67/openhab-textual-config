rule "stiebel_power_hour"
when
    Time cron "5 59 * ? * * *"
    or  
    Item Stiebel_TestSwitch changed to ON
then
    logInfo("Stiebel_power_hour", "Rule triggered")
    
    // Berechnung der Delta-Werte der letzten Stunde
    val Number temp_heating_h = Stiebel_power_heating_total.deltaSince(now.minusHours(1))
    val Number temp_water_h = Stiebel_power_water_today.deltaSince(now.minusHours(1))
    
    // Werte aktualisieren
    Stiebel_power_heating_houre.postUpdate(temp_heating_h)
    Stiebel_power_water_houre.postUpdate(temp_water_h)

    // Debugging-Informationen
    logInfo("Stiebel_power_hour", "Heating last hour: " + temp_heating_h)
    logInfo("Stiebel_power_hour", "Water last hour: " + temp_water_h)

    // Bedingung: Falls einer der Werte null ist, wird die Regel beendet
    if(temp_heating_h == null || temp_water_h == null) {
        logWarn("Stiebel_power_hour", "One of the values is null, exiting rule.")
        return;
    }

    // Summe der Deltas berechnen und aktualisieren
    logInfo("Stiebel_power_hour", "1")
    val Number temp_sum = temp_heating_h + temp_water_h
    logInfo("Stiebel_power_hour", "2")
    logInfo("Stiebel_power_hour", "Sum of Heating and Water: " + temp_sum)
    Stiebel_power_sum_houre.postUpdate(temp_sum)
    
end
